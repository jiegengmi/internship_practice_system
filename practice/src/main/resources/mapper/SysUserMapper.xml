<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ikikyou.practice.model.mapper.SysUserMapper">

    <resultMap id="BaseResultMap" type="com.ikikyou.practice.model.entity.system.SysUser">
            <id property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="deptId" column="dept_id" jdbcType="BIGINT"/>
            <result property="userName" column="user_name" jdbcType="VARCHAR"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="userType" column="user_type" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="tel" column="tel" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="CHAR"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="CHAR"/>
            <result property="delFlag" column="del_flag" jdbcType="CHAR"/>
            <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
            <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
            <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="UserDTOMap" type="com.ikikyou.practice.model.dto.UserDTO">
            <id property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="deptId" column="dept_id" jdbcType="BIGINT"/>
            <result property="userName" column="user_name" jdbcType="VARCHAR"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="userType" column="user_type" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="tel" column="tel" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="CHAR"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="CHAR"/>
            <result property="delFlag" column="del_flag" jdbcType="CHAR"/>
            <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
            <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
            <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
            <association property="dept" javaType="com.ikikyou.practice.model.entity.system.SysDept"
                     resultMap="com.ikikyou.practice.model.mapper.SysDeptMapper.BaseResultMap"/>
            <collection property="roles" javaType="java.util.List"
                        resultMap="com.ikikyou.practice.model.mapper.SysRoleMapper.BaseResultMap"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id,dept_id,user_name,
        nick_name,user_type,email,
        tel,sex,avatar,
        password,status,del_flag,
        login_ip,login_date,create_by,
        create_time,update_by,update_time,
        remark
    </sql>
    <select id="getUserList" resultMap="UserDTOMap" parameterType="com.ikikyou.practice.model.query.UserQuery">
        select
            u.user_id,u.dept_id,user_name,nick_name,user_type,u.email,tel,sex,avatar,password,u.status,u.del_flag,
            login_ip,login_date,u.create_by,u.create_time,u.update_by,u.update_time,u.remark,

            sd.dept_id,sd.dept_name,sd.parent_id,sd.del_flag,sd.order_num,sd.leader,

            sr.role_id, role_name, role_key, role_sort, data_scope, menu_check_strictly,
            dept_check_strictly, sr.status, sr.del_flag, sr.create_by, sr.create_time, sr.update_by, sr.update_time, sr.remark
        from sys_user u
            left join sys_user_role sur on u.user_id = sur.user_id
            left join sys_role sr on sur.role_id = sr.role_id
            left join sys_dept sd on u.dept_id = sd.dept_id
        where
            u.del_flag = '0'
            <if test="nickName != null and nickName != ''">
                and u.nick_name like concat('%', #{nickName}, '%')
            </if>
            <if test="tel != null and tel != ''">
                and u.tel like concat('%', #{tel}, '%')
            </if>
            <if test="userName != null and userName != ''">
                and u.user_name like concat('%', #{userName}, '%')
            </if>
            <if test="email != null and email != ''">
                and u.email like concat('%', #{email}, '%')
            </if>
            <!-- 开始时间检索 -->
             <if test="params.beginTime != null and params.beginTime != ''">
                AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
             </if>
            <!-- 结束时间检索 -->
            <if test="params.endTime != null and params.endTime != ''">
                AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
            <if test="deptId != null">
                and (sd.dept_id =#{deptId} or sd.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
            </if>
        limit
            #{pageNum},#{pageSize}
    </select>
</mapper>
